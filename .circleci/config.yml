version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.8.2
  aws-ecs: circleci/aws-ecs@01.1.0
  aws-cli: circleci/aws-cli@0.1.4

jobs:
  test: 
    docker:
      - image: cimg/node:15.0.1
    steps:
      - checkout
      - run: 
          name: Install Dependencies
          command: npm install
      - run:  
          name: Run Tests
          command: npm test
  deploy-app: 
    docker:
      - image: cimg/node:15.0.1
    steps:
      - run:
          name: deploy
          command: |
            aws ecr get-login-password --region ${REGION_ID} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION_ID}.amazonaws.com
            docker build -t devops-test-ecr-repo .
            docker tag devops-test-ecr-repo:latest ${ACCOUNT_ID}.dkr.ecr.${REGION_ID}.amazonaws.com/devops-test-ecr-repo:latest
            docker push ${ACCOUNT_ID}.dkr.ecr.${REGION_ID}.amazonaws.com/devops-test-ecr-repo:latest 
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: tfinit
          command: |
            terraform init 
            terraform plan -var-file variables.tfvarss
  apply:
    docker:
      - image: hashicorp/terraform:light
    steps:    
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply -var-file variables.tfvars
  destroy:
    docker:
      - image: hashicorp/terraform:lights
    steps:    
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform destroy -auto-approve tfdestroy -var-file variables.tfvars
  
workflows:
  build-and-deploy:
    jobs:
      - test 
      - deploy-app:
          filters:
            branches:
              only:
                - master
  create-infra:
    jobs:
      - plan-apply
      - apply:
          type: approval
          requires:
            - plan-apply
  destroy-infra:
    jobs:
      - destroy

  
#      - deploy-app:
#          requires:
#            - build-and-push-app-image
#  build-infrastructure:
#    jobs:
#      - plan-apply
#      - apply